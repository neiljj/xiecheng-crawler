
spring.application.name=xiecheng-crawler
server.servlet.context-path=
spring.profiles.active=
spring.main.allow-bean-definition-overriding=true


##在apollo中新增如下相关配置
## apollo application.properties
swagger.enable = true

## apollo datasource.properties
pagehelper.params = count=countSql
pagehelper.helper-dialect = mysql
pagehelper.reasonable = false
pagehelper.support-methods-arguments = true
mybatis.type-aliases-package = com.qudian.xiechengCrawler.entity
mybatis-plus.mapper-locations = classpath*:mapper/*.xml
spring.shardingsphere.datasource.names = master,slave0
# 数据源 主库
spring.shardingsphere.datasource.master.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master.driver-class-name = com.mysql.cj.jdbc.Driver

spring.shardingsphere.datasource.master.initialSize = 5
spring.shardingsphere.datasource.master.maxActive = 30
spring.shardingsphere.datasource.master.minIdle = 5
spring.shardingsphere.datasource.master.maxWait = 3000
spring.shardingsphere.datasource.master.validationQuery = SELECT 1
spring.shardingsphere.datasource.master.validationQueryTimeout = 30
spring.shardingsphere.datasource.master.testOnBorrow = false
spring.shardingsphere.datasource.master.testOnReturn = false
spring.shardingsphere.datasource.master.testWhileIdle = true
spring.shardingsphere.datasource.master.timeBetweenEvictionRunsMillis = 60000
spring.shardingsphere.datasource.master.minEvictableIdleTimeMillis = 300000
spring.shardingsphere.datasource.master.connectionInitSqls = set names utf8mb4
spring.shardingsphere.datasource.master.filters = stat,log4j,wall
# 数据源 从库
spring.shardingsphere.datasource.slave0.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave0.driver-class-name = com.mysql.cj.jdbc.Driver

spring.shardingsphere.datasource.slave0.initialSize = 5
spring.shardingsphere.datasource.slave0.maxActive = 30
spring.shardingsphere.datasource.slave0.minIdle = 5
spring.shardingsphere.datasource.slave0.maxWait = 3000
spring.shardingsphere.datasource.slave0.validationQuery = SELECT 1
spring.shardingsphere.datasource.slave0.validationQueryTimeout = 30
spring.shardingsphere.datasource.slave0.testOnBorrow = false
spring.shardingsphere.datasource.slave0.testOnReturn = false
spring.shardingsphere.datasource.slave0.testWhileIdle = true
spring.shardingsphere.datasource.slave0.timeBetweenEvictionRunsMillis = 60000
spring.shardingsphere.datasource.slave0.minEvictableIdleTimeMillis = 300000
spring.shardingsphere.datasource.slave0.connectionInitSqls = set names utf8mb4
spring.shardingsphere.datasource.slave0.filters = stat,log4j,wall

# 读写分离
spring.shardingsphere.masterslave.load-balance-algorithm-type = round_robin
spring.shardingsphere.masterslave.name = ms
spring.shardingsphere.masterslave.master-data-source-name = master
spring.shardingsphere.masterslave.slave-data-source-names = slave0
#打印sql
spring.shardingsphere.props.sql.show = true

## apollo redis.properties
spring.redis.host = 39.98.108.51
spring.redis.block-when-exhausted = false
spring.redis.database = 0
spring.redis.port = 6379
spring.redis.password =
spring.redis.jedis.pool.max-active = 200
spring.redis.jedis.pool.max-wait = 10000
spring.redis.jedis.pool.max-idle = 8
spring.redis.jedis.pool.min-idle = 0
spring.redis.timeout = 10000

#缓存超时时间戳，配置为0则不设置超时时间,单位秒
spring.cache.redis.time-to-live = 600



## apollo metrics.properties
management.server.port = 9146
management.server.servlet.context-path = ${server.servlet.context-path}
management.endpoints.web.exposure.include = health,metrics,prometheus
management.metrics.tags.application = ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests = true



